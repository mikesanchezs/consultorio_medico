/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Pacientes;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Miguelangelo
 */
public class AgregarPaciente extends javax.swing.JInternalFrame {

    Connection conecta;
    
    /**
     * Creates new form AgregarPaciente
     */
    public AgregarPaciente() {
        initComponents();
        IniciaBD();
        llenaTablaPacientes();
        txtID_P.setVisible(false);
    }
    
    public void IniciaBD(){
            try{
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            conecta = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/base_consultorio","root","");
            
            }catch (Exception ex){
            ex.printStackTrace();
            }
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNombre_P = new javax.swing.JTextField();
        txtApellidoP_P = new javax.swing.JTextField();
        txtTelefono_P = new javax.swing.JTextField();
        txtDireccion_P = new javax.swing.JTextField();
        txtLugarN_P = new javax.swing.JTextField();
        txtFechaN_P = new javax.swing.JTextField();
        txtApellidoM_P = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservaciones_P = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaPacientes = new javax.swing.JTable();
        txtID_P = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre(s):");

        jLabel2.setText("Apellido Paterno:");

        jLabel3.setText("Apellido Materno:");

        jLabel4.setText("Fecha de Nacimiento:");

        jLabel5.setText("Direccion:");

        jLabel6.setText("Telefono:");

        jLabel7.setText("Lugar de Nacimiento:");

        jLabel8.setText("Observaciones:");

        txtNombre_P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombre_PActionPerformed(evt);
            }
        });

        txtTelefono_P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefono_PActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Control de Pacientes");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtObservaciones_P.setColumns(20);
        txtObservaciones_P.setRows(5);
        jScrollPane1.setViewportView(txtObservaciones_P);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        TablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPacientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaPacientes);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(txtID_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(39, 39, 39)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(3, 3, 3)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel1)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(txtApellidoP_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jLabel4)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(txtFechaN_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(txtNombre_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 277, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel5)
                                    .add(jLabel6)
                                    .add(jLabel3))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtTelefono_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(txtApellidoM_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(16, 16, 16)
                                        .add(jLabel7)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(txtLugarN_P))
                                    .add(jScrollPane1)
                                    .add(txtDireccion_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 408, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(257, 257, 257)
                                .add(jLabel8)))
                        .add(0, 125, Short.MAX_VALUE))
                    .add(jScrollPane2))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btnModificar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnEliminar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(btnGuardar)
                        .add(10, 10, 10)
                        .add(btnLimpiar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(btnCancelar)
                        .add(30, 30, 30))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(254, 254, 254))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel9)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(txtNombre_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtApellidoP_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2)))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(txtFechaN_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel4)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtApellidoM_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jLabel7)
                    .add(txtLugarN_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtTelefono_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtDireccion_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(txtID_P, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(30, 30, 30)))
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnGuardar)
                    .add(btnCancelar)
                    .add(btnLimpiar)
                    .add(btnEliminar)
                    .add(btnModificar))
                .add(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefono_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefono_PActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefono_PActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String Nombre_P = txtNombre_P.getText();
        String ApellidoP_P = txtApellidoP_P.getText();
        String ApellidoM_P = txtApellidoM_P.getText();
        String FechaN_P = txtFechaN_P.getText();
        String Direccion_P = txtDireccion_P.getText();
        String Telefono_P = txtTelefono_P.getText();
        String LugarN_P = txtLugarN_P.getText();
        String Observaciones_P = txtObservaciones_P.getText();
        
        if (Nombre_P.length() == 0 || ApellidoP_P.length() == 0 ||
           ApellidoM_P.length() == 0 || FechaN_P.length() == 0 ||
           Direccion_P.length() == 0 || Telefono_P.length() == 0 ||
           LugarN_P.length() == 0 || Observaciones_P.length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Es neceario llenar todos los campos para registrar al paciente.");
            return;
        }
        
       try{ 
           PreparedStatement registra_paciente = conecta.prepareStatement(""
                    + "INSERT INTO pacientes(nombre,apellido_paterno,apellido_materno"
                   + ",fecha_nacimiento,direccion,telefono"
                + ",lugar_nacimiento,observaciones) VALUES (?,?,?,?,?,?,?,?)");                  
           registra_paciente.setString(1, Nombre_P);
           registra_paciente.setString(2, ApellidoP_P);
           registra_paciente.setString(3, ApellidoM_P);
           registra_paciente.setString(4, FechaN_P);
           registra_paciente.setString(5, Direccion_P);
           registra_paciente.setString(6, Telefono_P);  
           registra_paciente.setString(7, LugarN_P);
           registra_paciente.setString(8, Observaciones_P);
           
           
           
           registra_paciente.executeUpdate();
           
           
           VaciaCampos();
           llenaTablaPacientes();
           
        }catch(Exception e){
            e.printStackTrace();       
            }
        {
           JOptionPane.showMessageDialog(null, "El paciente fue registrado con exito.");
           return;
           }
       
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombre_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombre_PActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombre_PActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        VaciaCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        String ID_P = txtID_P.getText();
        String Nombre_P = txtNombre_P.getText();
        String ApellidoP_P = txtApellidoP_P.getText();
        String ApellidoM_P = txtApellidoM_P.getText();
        String FechaN_P = txtFechaN_P.getText();
        String Direccion_P = txtDireccion_P.getText();
        String Telefono_P = txtTelefono_P.getText();
        String LugarN_P = txtLugarN_P.getText();
        String Observaciones_P = txtObservaciones_P.getText();

        if (Nombre_P.length() == 0 || ApellidoP_P.length() == 0 ||
            ApellidoM_P.length() == 0 || FechaN_P.length() == 0 ||
            Direccion_P.length() == 0 || Telefono_P.length() == 0 ||
            LugarN_P.length() == 0 || Observaciones_P.length() == 0)
        {
            JOptionPane.showMessageDialog(null, "Es neceario llenar todos los campos para registrar al paciente.");
            return;
        }

        try{
            PreparedStatement modifica_paciente = conecta.prepareStatement(""
                + "UPDATE pacientes SET "
                    + "nombre=?"
                    + ",apellido_paterno=?"
                    + ",apellido_materno=?"
                    + ",fecha_nacimiento=?"
                    + ",direccion=?"
                    + ",telefono=?"
                    + ",lugar_nacimiento=?"
                    + ",observaciones=?"
                    + " WHERE ID_paciente=?");
            modifica_paciente.setString(1, Nombre_P);
            modifica_paciente.setString(2, ApellidoP_P);
            modifica_paciente.setString(3, ApellidoM_P);
            modifica_paciente.setString(4, FechaN_P);
            modifica_paciente.setString(5, Direccion_P);
            modifica_paciente.setString(6, Telefono_P);
            modifica_paciente.setString(7, LugarN_P);
            modifica_paciente.setString(8, Observaciones_P);
            modifica_paciente.setString(9, ID_P);

            modifica_paciente.executeUpdate();

            VaciaCampos();
            llenaTablaPacientes();

        }catch(Exception e){
            e.printStackTrace();
        }
        {
            JOptionPane.showMessageDialog(null, "La informacion del paciente fue modificada con exito.");
            return;
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String ID_P = txtID_P.getText();

        try{
            PreparedStatement elimina_cita = conecta.prepareStatement(""
                + "DELETE FROM pacientes WHERE ID_paciente=?");

            elimina_cita.setString(1, ID_P);

            elimina_cita.executeUpdate();

            VaciaCampos();
            llenaTablaPacientes();

        }catch(Exception e){
            e.printStackTrace();
        }
        {
            JOptionPane.showMessageDialog(null, "La informacion del paciente fue eliminada con exito.");
            return;
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void TablaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPacientesMouseClicked
        // TODO add your handling code here:
        String Nombre_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 1);
        String ApellidoP_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 2);
        String ApellidoM_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 3);
        String FechaN_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 4);
        String Direccion_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 5);
        String Telefono_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 6);
        String LugarN_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 7);
        String Observaciones_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 8);
        //String ID_P = (String) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 0);
       
        int ID_P=(Integer) TablaPacientes.getValueAt( TablaPacientes.getSelectedRow(), 0);
        txtID_P.setText(Integer.toString(ID_P));
     
        //txtID_P.setText(ID_P);
        txtNombre_P.setText(Nombre_P);
        txtApellidoP_P.setText(ApellidoP_P);
        txtApellidoM_P.setText(ApellidoM_P);
        txtFechaN_P.setText(FechaN_P);
        txtDireccion_P.setText(Direccion_P);
        txtTelefono_P.setText(Telefono_P);
        txtLugarN_P.setText(LugarN_P);
        txtObservaciones_P.setText(Observaciones_P);
    }//GEN-LAST:event_TablaPacientesMouseClicked

    public void VaciaCampos(){
        txtNombre_P.setText("");
        txtApellidoM_P.setText("");
        txtApellidoP_P.setText("");
        txtFechaN_P.setText("");
        txtDireccion_P.setText("");
        txtTelefono_P.setText("");
        txtLugarN_P.setText("");
        txtObservaciones_P.setText("");
    }
    
       public void llenaTablaPacientes() {
    try{
        DefaultTableModel model = new DefaultTableModel();
        TablaPacientes.setModel(model);
        PreparedStatement consulta = conecta.prepareStatement(""
                + "SELECT * FROM pacientes");
        ResultSet rs = consulta.executeQuery();
        ResultSetMetaData rsMd = rs.getMetaData();
        int numeroColumnas = rsMd.getColumnCount();
        for (int i=1; i<= numeroColumnas; i++){
            model.addColumn(rsMd.getColumnLabel(i));
        }
    while (rs.next()){
        Object[] fila = new Object[numeroColumnas];
        for (int j =1; j<= numeroColumnas; j++){
            fila[j-1]= rs.getObject(j);
        }
        model.addRow(fila);
    }
    
    
}catch(Exception e){
        e.printStackTrace();
    }
}
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarPaciente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaPacientes;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField txtApellidoM_P;
    public static javax.swing.JTextField txtApellidoP_P;
    public static javax.swing.JTextField txtDireccion_P;
    public static javax.swing.JTextField txtFechaN_P;
    public static javax.swing.JTextField txtID_P;
    public static javax.swing.JTextField txtLugarN_P;
    public static javax.swing.JTextField txtNombre_P;
    public static javax.swing.JTextArea txtObservaciones_P;
    public static javax.swing.JTextField txtTelefono_P;
    // End of variables declaration//GEN-END:variables
}
